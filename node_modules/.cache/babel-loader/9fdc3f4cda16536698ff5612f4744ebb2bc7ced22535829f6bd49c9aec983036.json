{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\Portfolio\\\\finance-tracker\\\\src\\\\components\\\\SplashScreen.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n//import splashGif from '@/public/pledge.gif'; // Adjust the path if necessary\nimport './SplashScreen.css'; // Import the CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SplashScreen = () => {\n  _s();\n  const [isVisible, setIsVisible] = useState(true);\n  const [isDelayed, setIsDelayed] = useState(true);\n  useEffect(() => {\n    // Start the GIF after the delay\n    const startTimer = setTimeout(() => {\n      setIsDelayed(false);\n    }, 500);\n\n    // Hide the splash screen after the GIF duration + delay\n    const endTimer = setTimeout(() => {\n      setIsVisible(false);\n    }, 1500 + 500);\n    return () => {\n      clearTimeout(startTimer);\n      clearTimeout(endTimer);\n    };\n  }, []);\n  if (!isVisible) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"splash-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/pledge.gif\",\n      alt: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(SplashScreen, \"AhECnn3C9lRGVhYqx2FcTn4tvZ0=\");\n_c = SplashScreen;\nexport default SplashScreen;\nvar _c;\n$RefreshReg$(_c, \"SplashScreen\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","SplashScreen","_s","isVisible","setIsVisible","isDelayed","setIsDelayed","startTimer","setTimeout","endTimer","clearTimeout","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Work/Portfolio/finance-tracker/src/components/SplashScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n//import splashGif from '@/public/pledge.gif'; // Adjust the path if necessary\r\nimport './SplashScreen.css'; // Import the CSS for styling\r\n\r\nconst SplashScreen: React.FC = () => {\r\n  const [isVisible, setIsVisible] = useState(true);\r\n  const [isDelayed, setIsDelayed] = useState(true);\r\n  \r\n  useEffect(() => {\r\n    // Start the GIF after the delay\r\n    const startTimer = setTimeout(() => {\r\n      setIsDelayed(false);\r\n    }, 500);\r\n\r\n    // Hide the splash screen after the GIF duration + delay\r\n    const endTimer = setTimeout(() => {\r\n      setIsVisible(false);\r\n    }, 1500 + 500);\r\n\r\n    return () => {\r\n        clearTimeout(startTimer);\r\n        clearTimeout(endTimer);\r\n      };\r\n    }, []);\r\n\r\n  if (!isVisible) return null;\r\n\r\n  return (\r\n    <div className=\"splash-screen\">\r\n      <img src=\"/pledge.gif\" alt=\"Loading...\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SplashScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD;AACA,OAAO,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,UAAU,GAAGC,UAAU,CAAC,MAAM;MAClCF,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,EAAE,GAAG,CAAC;;IAEP;IACA,MAAMG,QAAQ,GAAGD,UAAU,CAAC,MAAM;MAChCJ,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,EAAE,IAAI,GAAG,GAAG,CAAC;IAEd,OAAO,MAAM;MACTM,YAAY,CAACH,UAAU,CAAC;MACxBG,YAAY,CAACD,QAAQ,CAAC;IACxB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAER,IAAI,CAACN,SAAS,EAAE,OAAO,IAAI;EAE3B,oBACEH,OAAA;IAAKW,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5BZ,OAAA;MAAKa,GAAG,EAAC,aAAa;MAACC,GAAG,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAAChB,EAAA,CA5BID,YAAsB;AAAAkB,EAAA,GAAtBlB,YAAsB;AA8B5B,eAAeA,YAAY;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}